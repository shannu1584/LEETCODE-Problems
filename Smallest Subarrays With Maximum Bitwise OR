class Solution(object):
    def smallestSubarrays(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        answer = [1] * n
        last = [0] * 32  # Track the last seen position of each bit (0 to 31)

        for i in range(n - 1, -1, -1):
            # Update the last seen position of each bit in nums[i]
            for b in range(32):
                if (nums[i] >> b) & 1:
                    last[b] = i
            # The farthest we need to go to keep the OR maximum
            farthest = i
            for b in range(32):
                if last[b]:
                    farthest = max(farthest, last[b])
            answer[i] = farthest - i + 1
        return answer
